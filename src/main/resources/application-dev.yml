server:
  port: 8080
  tomcat:
    uri-encoding: utf-8
    max-connections: 10000
    max-threads: 2000

##spring配置
spring:
  application:
    #注册到注册中心应用名
    name: fdvt-core
  ##cloud配置
  cloud:
    zookeeper:
      #注册到zookeeper注册中心的服务地址
      connect-string: localhost:2181
      discovery:
        #是否启动服务注册
        register: true
        enabled: true
        #zk唯一id的标识
        instance-id: 1
        instance-port: ${server.port}
        #zk根节点名称，默认/services
        root: /schedule
  #Redis配置
  redis:
    host: 127.0.0.1
    password:
    port: 6379
    jedis:
      pool:
        max-idle: 100
        min-idle: 1
        max-active: 1000
        max-wait: -1
  ##数据源配置
  datasource:
#    name: D1
#    url: jdbc:sqlite:d1-core/D1.db
#    username:
#    password:
#    type: com.zaxxer.hikari.HikariDataSource
#    driver-class-name: org.sqlite.JDBC
    dynamic:
      hikari:  # 全局hikariCP参数，所有值和默认保持一致。(现已支持的参数如下,不清楚含义不要乱设置)
          minimum-idle: 5
          maximum-pool-size: 15
          auto-commit: true
          idle-timeout: 30000
          pool-name: DatebookHikariCP
          max-lifetime: 1800000
          connection-timeout: 30000
          connection-test-query: SELECT 1
      p6spy: true # 默认false,建议线上关闭。
      primary: D1 #设置默认的数据源或者数据源组,默认值即为master
      datasource:
        D1:
          username:
          password:
          driver-class-name: org.sqlite.JDBC
          url: jdbc:sqlite:d1-core/D1.db
        QA:
          username: pgadmin@b2b-qa-ipbm-mysql-0
          password: dNxFDpsr3E61
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://b2b-qa-ipbm-mysql-0.mysql.database.chinacloudapi.cn:3306/ipbm_yhis?useSSL=true&requireSSL=false&useUnicode=true&characterEncoding=UTF-8

###mybatis-plus配置
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath*:mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: ai.sparklabinc.entity
  # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
  log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 3
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #mp2.3+ 全局表前缀 mp_
    #table-prefix: mp_
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    # Sequence序列接口实现类配置
    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: false
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    #打印sql日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

###异步线程配置
# 配置核心线程数
async:
  executor:
    thread:
      #核心线程数
      core_pool_size: 5
      #最大线程数
      max_pool_size: 5
      # 配置队列大小
      queue_capacity: 99999
      # 配置线程池中的线程的名称前缀
      name:
        prefix: async-service-




